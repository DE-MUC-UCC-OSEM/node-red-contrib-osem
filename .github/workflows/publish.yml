# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Create Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Provide a version number'
        required: true
        type: string
        default: '1.0.0'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.JS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com/

      - name: Set Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            if ! echo "${{ github.event.inputs.version }}" | grep -qE '^[0-9]{1}\.[0-9]+\.[0-9]+$'; then
              echo "Version is not in expected format."
              exit 1
            fi
          fi
          npm --no-git-tag-version version "${{ github.event.inputs.version }}"
          git add package.json
          git -c user.name="actions bot" -c user.email="actions-bot@users.noreply.github.com" commit -m "Set version to $(cat package.json | jq -r '.version')"
          git push origin ${{ github.ref_name }}

      - name: Create Package
        run: |
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_VERSION: ${{ github.event.inputs.version }}
        run: |
          echo -e "OpenScape Endpoint Management Node-RED node version $RELEASE_VERSION\n" > rn
          gh release create "$RELEASE_VERSION" \
              --repo="$GITHUB_REPOSITORY" \
              --title="$RELEASE_VERSION" \
              --notes-file rn
